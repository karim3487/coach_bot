# generated by datamodel-codegen:
#   filename:  http://localhost:8000/openapi.json
#   timestamp: 2025-04-18T14:34:36+00:00

from __future__ import annotations

from datetime import datetime, time

from pydantic import BaseModel, Field


class BodyUseCodeV1BackupCodesUsePost(BaseModel):
    telegram_id: int = Field(..., title="Telegram Id")
    code: str = Field(..., title="Code")


class UserCreate(BaseModel):
    full_name: str = Field(..., title="Full Name")
    age: int = Field(..., title="Age")
    weight: float = Field(..., title="Weight")
    height: float = Field(..., title="Height")
    contraindications: str = Field(..., title="Contraindications")
    goal: str = Field(..., title="Goal")
    training_place: str = Field(..., title="Training Place")
    training_time: time = Field(..., title="Training Time")
    training_days: list[str] = Field(..., title="Training Days")
    notes: str | None = Field(..., title="Notes")
    telegram_id: int = Field(..., title="Telegram Id")


class UserTelegramIDRead(BaseModel):
    telegram_id: int = Field(..., title="Telegram Id")
    id: int = Field(..., title="Id")


class ValidationError(BaseModel):
    loc: list[str | int] = Field(..., title="Location")
    msg: str = Field(..., title="Message")
    type: str = Field(..., title="Error Type")


class HTTPValidationError(BaseModel):
    detail: list[ValidationError] | None = Field(None, title="Detail")


class UserRead(BaseModel):
    created_at: datetime = Field(
        ...,
        description="Creation timestamp of the object.",
        title="Created At",
    )
    modified_at: datetime | None = Field(
        ...,
        description="Last modification timestamp of the object.",
        title="Modified At",
    )
    full_name: str = Field(..., title="Full Name")
    age: int = Field(..., title="Age")
    weight: float = Field(..., title="Weight")
    height: float = Field(..., title="Height")
    contraindications: str = Field(..., title="Contraindications")
    goal: str = Field(..., title="Goal")
    training_place: str = Field(..., title="Training Place")
    training_time: time = Field(..., title="Training Time")
    training_days: list[str] = Field(..., title="Training Days")
    notes: str | None = Field(..., title="Notes")
    id: int = Field(..., title="Id")
    telegram_ids: list[UserTelegramIDRead] = Field(..., title="Telegram Ids")
