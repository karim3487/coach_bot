import logging
from aiogram import types
from aiogram_dialog import DialogManager, StartMode
from aiogram_dialog.widgets import kbd

from coach_bot.services.coach_api import api_client
from coach_bot.states.user import PlanCreateMenu, UserPlanMenu

logger = logging.getLogger(__name__)


async def on_start_workout_clicked(callback: types.CallbackQuery, button: kbd.Button, manager: DialogManager):
    await callback.answer("üèãÔ∏è –ù–∞—á–∞—Ç—å —Ç—Ä–µ–Ω–∏—Ä–æ–≤–∫—É! (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")


async def on_progress_clicked(callback: types.CallbackQuery, button: kbd.Button, manager: DialogManager):
    await callback.answer("üìà –í–∞—à –ø—Ä–æ–≥—Ä–µ—Å—Å! (–ø–æ–∫–∞ –Ω–µ —Ä–µ–∞–ª–∏–∑–æ–≤–∞–Ω–æ)")


async def on_my_plan_clicked(callback: types.CallbackQuery, button: kbd.Button, manager: DialogManager):
    telegram_id = callback.from_user.id
    try:
        plan = await api_client.get_current_plan(telegram_id)
        if not plan:
            await callback.answer("üìã –£ –≤–∞—Å –Ω–µ—Ç –∞–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–ª–∞–Ω–∞. –î–∞–≤–∞–π—Ç–µ —Å–æ–∑–¥–∞–¥–∏–º!", show_alert=True)
            await manager.start(PlanCreateMenu.start, mode=StartMode.RESET_STACK)
        else:
            await manager.start(UserPlanMenu.menu, mode=StartMode.RESET_STACK)
    except Exception as e:
        logger.exception("Failed to check user plan", exc_info=e)
        await callback.answer("‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–≤–µ—Ä–∫–µ –ø–ª–∞–Ω–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.", show_alert=True)
